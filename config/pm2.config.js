/**\n * PM2 Configuration for MariaIntelligence\n * Optimized for production deployment with clustering\n */\n\nmodule.exports = {\n  apps: [\n    {\n      name: 'mariaintelligence-server',\n      script: './server/index.ts',\n      cwd: './',\n      \n      // Instance configuration\n      instances: process.env.NODE_ENV === 'production' ? 'max' : 1,\n      exec_mode: 'cluster',\n      \n      // Performance optimizations\n      max_memory_restart: '500M',\n      min_uptime: '10s',\n      max_restarts: 10,\n      autorestart: true,\n      \n      // Monitoring\n      watch: process.env.NODE_ENV !== 'production',\n      ignore_watch: [\n        'node_modules',\n        'uploads',\n        'logs',\n        'dist',\n        '.git',\n        '*.log'\n      ],\n      \n      // Logging\n      log_file: './logs/pm2-combined.log',\n      out_file: './logs/pm2-out.log',\n      error_file: './logs/pm2-error.log',\n      log_date_format: 'YYYY-MM-DD HH:mm:ss Z',\n      merge_logs: true,\n      \n      // Environment variables\n      env: {\n        NODE_ENV: 'development',\n        PORT: 3001,\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379\n      },\n      \n      env_production: {\n        NODE_ENV: 'production',\n        PORT: 3001,\n        REDIS_HOST: process.env.REDIS_HOST || 'localhost',\n        REDIS_PORT: process.env.REDIS_PORT || 6379,\n        REDIS_PASSWORD: process.env.REDIS_PASSWORD\n      },\n      \n      // Node.js options\n      node_args: [\n        '--max-old-space-size=512',\n        '--optimize-for-size'\n      ],\n      \n      // Graceful shutdown\n      kill_timeout: 5000,\n      listen_timeout: 10000,\n      \n      // Health check\n      health_check_grace_period: 3000,\n      \n      // Advanced PM2 features\n      vizion: true,\n      post_update: ['npm install'],\n      \n      // Source map support for TypeScript\n      source_map_support: true,\n      \n      // Interpreter\n      interpreter: './node_modules/.bin/ts-node'\n    },\n    \n    // Redis monitoring process\n    {\n      name: 'redis-monitor',\n      script: './scripts/monitor-redis.js',\n      cwd: './',\n      instances: 1,\n      exec_mode: 'fork',\n      autorestart: true,\n      max_restarts: 5,\n      min_uptime: '30s',\n      \n      // Only run in production\n      env: {\n        NODE_ENV: 'development'\n      },\n      \n      env_production: {\n        NODE_ENV: 'production'\n      },\n      \n      // Logging\n      log_file: './logs/redis-monitor.log',\n      merge_logs: true,\n      \n      // Cron restart at 3 AM daily\n      cron_restart: '0 3 * * *'\n    },\n    \n    // Performance monitoring process\n    {\n      name: 'performance-monitor',\n      script: './scripts/performance-monitor.js',\n      cwd: './',\n      instances: 1,\n      exec_mode: 'fork',\n      autorestart: true,\n      max_restarts: 3,\n      min_uptime: '1m',\n      \n      env: {\n        NODE_ENV: 'development',\n        MONITOR_INTERVAL: 60000\n      },\n      \n      env_production: {\n        NODE_ENV: 'production',\n        MONITOR_INTERVAL: 30000\n      },\n      \n      // Logging\n      log_file: './logs/performance-monitor.log',\n      merge_logs: true\n    }\n  ],\n  \n  // Deployment configuration\n  deploy: {\n    production: {\n      user: process.env.DEPLOY_USER || 'deploy',\n      host: process.env.DEPLOY_HOST || 'your-server.com',\n      ref: 'origin/main',\n      repo: 'https://github.com/your-username/mariaintelligence.git',\n      path: '/var/www/mariaintelligence',\n      \n      // Pre-deployment commands\n      'pre-deploy': 'git fetch --all',\n      \n      // Post-deployment commands\n      'post-deploy': [\n        'npm install --production',\n        'npm run build',\n        'pm2 reload ecosystem.config.js --env production',\n        'pm2 save'\n      ].join(' && '),\n      \n      // Environment variables for deployment\n      env: {\n        NODE_ENV: 'production',\n        PORT: 3001\n      }\n    },\n    \n    staging: {\n      user: process.env.STAGING_USER || 'deploy',\n      host: process.env.STAGING_HOST || 'staging-server.com',\n      ref: 'origin/develop',\n      repo: 'https://github.com/your-username/mariaintelligence.git',\n      path: '/var/www/mariaintelligence-staging',\n      \n      'post-deploy': [\n        'npm install',\n        'npm run build',\n        'pm2 reload ecosystem.config.js --env staging',\n        'pm2 save'\n      ].join(' && '),\n      \n      env: {\n        NODE_ENV: 'staging',\n        PORT: 3002\n      }\n    }\n  }\n};\n\n// Export for CommonJS compatibility\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports.default = module.exports;\n}\n"