import React, { useState } from "react";

/**
 * Exemplo de dados de propriedades.
 * Em produção, você puxaria isso do backend ou de um arquivo de config.
 */
const propertiesData = [
  {
    id: "ajuda",
    nome: "Ajuda",
    custoLimpeza: 45,
    taxaCheckin: 0,
    comissao: 0.0, // 0%
    pagamentoEquipa: 45,
  },
  {
    id: "almada-rei",
    nome: "Almada rei",
    custoLimpeza: 55,
    taxaCheckin: 0,
    comissao: 0.0, // 0%
    pagamentoEquipa: 45,
  },
  // ... (adicione todas as suas propriedades)
];

/**
 * Formulário de criação de reserva
 */
function App() {
  // Estados para capturar seleção
  const [selectedPropertyId, setSelectedPropertyId] = useState("");
  const [checkinDate, setCheckinDate] = useState("");
  const [checkoutDate, setCheckoutDate] = useState("");
  const [numHospedes, setNumHospedes] = useState(1);
  const [valorTotal, setValorTotal] = useState("");
  const [observacoes, setObservacoes] = useState("");

  // Busca a propriedade selecionada para exibir custos automaticamente
  const selectedProperty = propertiesData.find(
    (prop) => prop.id === selectedPropertyId
  );

  // Função de submit simulada
  const handleSubmit = (e) => {
    e.preventDefault();

    // Cálculos automatizados (exemplo)
    const custoLimpeza = selectedProperty ? selectedProperty.custoLimpeza : 0;
    const taxaCheckin = selectedProperty ? selectedProperty.taxaCheckin : 0;
    const comissao = selectedProperty
      ? valorTotal * selectedProperty.comissao
      : 0;
    const pagamentoEquipa = selectedProperty
      ? selectedProperty.pagamentoEquipa
      : 0;

    const receitaLiquidaProprietario =
      Number(valorTotal) - (custoLimpeza + taxaCheckin + comissao + pagamentoEquipa);
    const ganhosMariaFaz =
      custoLimpeza + taxaCheckin + comissao - pagamentoEquipa;

    // Exemplo de envio ou exibição no console:
    const reserva = {
      propriedade: selectedProperty ? selectedProperty.nome : "",
      dataCheckin: checkinDate,
      dataCheckout: checkoutDate,
      hospedes: numHospedes,
      valorTotal: Number(valorTotal),
      custoLimpeza,
      taxaCheckin,
      comissao,
      pagamentoEquipa,
      receitaLiquidaProprietario,
      ganhosMariaFaz,
      observacoes,
    };

    console.log("Reserva criada:", reserva);

    // Aqui, em um app real, você chamaria sua API:
    // await fetch('URL_DA_API/reservas', { method: 'POST', body: JSON.stringify(reserva) });
    
    alert("Reserva criada com sucesso! Verifique o console para detalhes.");
  };

  return (
    <div style={{ maxWidth: "600px", margin: "0 auto", padding: "1rem" }}>
      <h2>Formulário de Reserva</h2>
      <form onSubmit={handleSubmit}>

        {/* Propriedade */}
        <label htmlFor="propertySelect">Propriedade:</label>
        <select
          id="propertySelect"
          value={selectedPropertyId}
          onChange={(e) => setSelectedPropertyId(e.target.value)}
          required
        >
          <option value="">Selecione</option>
          {propertiesData.map((property) => (
            <option key={property.id} value={property.id}>
              {property.nome}
            </option>
          ))}
        </select>

        {/* Data de Check-in */}
        <label htmlFor="checkinDate">Data de Check-in:</label>
        <input
          type="date"
          id="checkinDate"
          value={checkinDate}
          onChange={(e) => setCheckinDate(e.target.value)}
          required
        />

        {/* Data de Check-out */}
        <label htmlFor="checkoutDate">Data de Check-out:</label>
        <input
          type="date"
          id="checkoutDate"
          value={checkoutDate}
          onChange={(e) => setCheckoutDate(e.target.value)}
          required
        />

        {/* Número de Hóspedes */}
        <label htmlFor="numHospedes">Nº de Hóspedes:</label>
        <input
          type="number"
          id="numHospedes"
          min="1"
          value={numHospedes}
          onChange={(e) => setNumHospedes(e.target.value)}
          required
        />

        {/* Valor Total da Reserva */}
        <label htmlFor="valorTotal">Valor Total da Reserva (€):</label>
        <input
          type="number"
          id="valorTotal"
          step="0.01"
          value={valorTotal}
          onChange={(e) => setValorTotal(e.target.value)}
          required
        />

        {/* Observações */}
        <label htmlFor="observacoes">Observações:</label>
        <textarea
          id="observacoes"
          value={observacoes}
          onChange={(e) => setObservacoes(e.target.value)}
          placeholder="Notas adicionais sobre a reserva..."
        />

        {/* Dados Automatizados (Somente Leitura) */}
        {selectedProperty && (
          <div style={{ border: "1px solid #ccc", padding: "0.5rem", margin: "1rem 0" }}>
            <p><strong>Custo de Limpeza:</strong> {selectedProperty.custoLimpeza} €</p>
            <p><strong>Taxa de Check-in:</strong> {selectedProperty.taxaCheckin} €</p>
            <p><strong>Comissão:</strong> {selectedProperty.comissao * 100}%</p>
            <p><strong>Pagamento à Equipa:</strong> {selectedProperty.pagamentoEquipa} €</p>
          </div>
        )}

        <button type="submit">Criar Reserva</button>
      </form>
    </div>
  );
}

export default App;
