# 🏁 SPRINT FINAL – “MariaFaz 100 % Operacional”

> **Objectivo:** depois destes passos o fluxo **PDF → OCR → Validação → Reserva** funciona;
> dashboards mostram dados; orçamentos respondem 200; e os testes ficam verdes.

---

## 0. Pré‑condições

* `.env` já contém

  ```
  PRIMARY_AI=openrouter
  OR_MODEL=mistral-ocr
  OPENROUTER_API_KEY=***
  HF_TOKEN=***
  ```
* Branch: **feat/finalize-ocr**

---

## 1. Rota única de OCR

### 1.1 Back‑end  (`server/routes.ts`)

```ts
// 🔄  substituir rota antiga
router.post("/api/ocr", upload.single("pdf"), ocrController.postOcr);
// remover/comentar qualquer rota /api/upload-pdf
```

### 1.2 Front‑end  (`client/src/pages/pdf-upload/index.tsx`)

```tsx
// dentro do handleFileUpload
const form = new FormData();
files.forEach(f => form.append("pdf", f));
const res = await fetch("/api/ocr?provider=auto", { method:"POST", body:form });
const data = await res.json();  // {reservations, boxes, missing}
setOcrResult(data);
openDrawer();                   // abre o ValidationDrawer
```

---

## 2. Parser sem Gemini

`server/parsers/parseReservations.ts`

1. **Remover** ou comentar chamada `parseReservationDataWithGemini()`.
2. Fluxo desejado:

```ts
// 1) tentar extrair campos via regex
// 2) se faltar algo -> devolve missing[]
// 3) RolmOCR só é chamado quando handwritingScore > 0.4
```

---

## 3. Aliases para propriedades

### 3.1 Prisma schema (`prisma/schema.prisma`)

```prisma
model Property {
  id       Int      @id @default(autoincrement())
  name     String
  aliases  String[] @default([])
  // ...
}
```

```bash
npx prisma migrate dev -n add_aliases
```

### 3.2 Serviço de matching (`server/services/property.service.ts`)

```ts
import similarity from "string-similarity";

export async function matchByAlias(raw: string) {
  const props = await prisma.property.findMany();
  const names = props.flatMap(p => [p.name, ...p.aliases]);
  const { bestMatch } = similarity.findBestMatch(raw, names);
  if (bestMatch.rating < 0.6) return null;
  const prop = props.find(p => p.name === bestMatch.target || p.aliases.includes(bestMatch.target));
  return prop ? { id: prop.id, score: bestMatch.rating } : null;
}
```

---

## 4. UI de validação

### 4.1 Componente Drawer (`client/src/components/ValidationDrawer.tsx`)

```tsx
import { pdfjs, Document, Page } from "react-pdf";
pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;

export default function ValidationDrawer({fileUrl, boxes, reservation, missing, onSave}) {
  // render PDF + rects + form dinâmico
}
```

### 4.2 Integração

* `UploadPDF.tsx` → guarda `ocrResult` em estado e passa ao drawer.
* No `<form>` do drawer mostra `<Select>` de propriedades se `missing` inclui `"propertyId"`.

---

## 5. Endpoint de orçamento

`server/controllers/budget.controller.ts`

```ts
export async function estimate(req, res) {
  const { nights, nightlyRate, feePct = 10 } = req.body;
  const total = nights * nightlyRate;
  const margin = total * (feePct / 100);
  res.json({ total, margin });
}
```

`server/routes.ts`

```ts
router.post("/api/budgets/estimate", budgetController.estimate);
```

---

## 6. Dashboard: correcção datas

`server/services/dashboard.service.ts`

```ts
const normalize = (d:string|Date) => new Date(d);
const stays = await prisma.reservation.findMany({
  where:{ checkInDate:{ gte: start, lt: end } }
});
const nights = stays.reduce((acc,s)=> acc + (normalize(s.checkOutDate)-normalize(s.checkInDate))/864e5,0);
```

---

## 7. Testes Jest

### 7.1 OCR route (`tests/ocr.spec.ts`)

```ts
it("processa PDF Sete Rios", async () => {
  const res = await request(app)
     .post("/api/ocr")
     .attach("pdf", "__tests__/data/Controlo_Sete Rios.pdf");
  expect(res.status).toBe(200);
  expect(res.body.reservations[0].guestName).toBeDefined();
});
```

### 7.2 Orçamento (`tests/budget.spec.ts`)

```ts
it("faz orçamento", async () => {
  const res = await request(app)
     .post("/api/budgets/estimate")
     .send({ nights: 5, nightlyRate: 100 });
  expect(res.body.total).toBe(500);
});
```

---

## 8. Scripts utilitários (opcional)

* `scripts/ocr-benchmark.ts` – compara Mistral e Qwen em `tests/pdfs`
* `scripts/alias-generator.ts` – gerar aliases a partir de nomes existentes

---

## 9. QA Manual (Checklist)

* [ ] **Upload** `Controlo_Sete Rios.pdf` → drawer abre, campos auto‑preenchidos.
* [ ] **Escolher propriedade** se não detectada → “Guardar” e reserva surge no dashboard.
* [ ] **Imagem manuscrita** → RolmOCR activa; campos extraídos.
* [ ] **Orçamento** → formulário devolve total.
* [ ] **Dashboard mensal** mostra números ≠ 0.

---

## 10. Build & lint

```bash
pnpm dlx eslint . --fix
tsc --noEmit
pnpm test
```

**Tudo verde?**  ✅ GO LIVE!
